{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task: '',\n      index: null,\n      update: false,\n      tasktoupdate: {},\n      newtitle: tasktoupdate.title,\n      done: false,\n      tasks: [{\n        title: \"Do homework every day this week\",\n        created_at: \"2024/04/29\",\n        done: false,\n        done_at: \"\"\n      }]\n    };\n  },\n  methods: {\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n    },\n    addtask() {\n      let curentdate = new Date();\n      let created_at = curentdate.getFullYear() + \"/\" + (curentdate.getMonth() + 1) + \"/\" + curentdate.getDay();\n      this.tasks.push({\n        title: this.task,\n        created_at: created_at,\n        done: this.done,\n        done_at: \"\"\n      });\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    toupdate(index) {\n      this.update = true;\n      this.tasktoupdate = this.tasks[index];\n    }\n  },\n  computed: {\n    iconeStatus() {\n      return done => {\n        return done ? \"done_all\" : \"watch_check\";\n      };\n    },\n    title() {\n      return done => {\n        return done ? \"mark as not done\" : \"mark as done\";\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","task","index","update","tasktoupdate","newtitle","title","done","tasks","created_at","done_at","methods","Status","addtask","curentdate","Date","getFullYear","getMonth","getDay","push","deleteTask","splice","toupdate","computed","iconeStatus"],"sources":["/var/www/html/Vue js/todo-list/src/components/todolist.vue"],"sourcesContent":["<template>\n  <div align=\"center\" class=\"tasks w-50 p-4\">\n\n    <form @submit.prevent=\"addtask\" style=\"text-align: start;\">\n      \n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text material-symbols-outlined fs-4\" >add</span>\n        <input type=\"text\" class=\"form-control\" name=\"task\" placeholder=\"New Task Title or description\" v-model=\"task\">\n        <button class=\"btn btn-primary\" type=\"submit \" >Submit</button>\n      </div>\n\n      <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" v-model=\"done\" id=\"done\">\n      <label class=\"form-check-label\" for=\"done\" style=\"color: white\">Mark as done</label>\n    </div>\n      \n    </form>\n\n    <ul>\n      <li v-for=\"(task, index) in tasks\" :key=\"index\"> <!-- Added key binding and index to v-for -->\n        <div class=\"todo px-3 py-3 d-flex justify-content-between\">\n          <div>\n            <p class=\"fs-5 mb-2\"><strong>{{ task.title }} </strong></p> <!-- Fixed task.title binding -->\n            <small style=\"color: #2B1887; font-weight: 600\" class=\"m-0\"> {{ task.created_at }} </small>\n          </div>\n\n          <div>\n            <span @click=\"Status(index)\" :title=\"title(task.done)\" class=\"material-symbols-outlined icon fs-2\" :class=\"{'done': task.done, 'notdone': !task.done}\">\n              {{ iconeStatus(task.done) }} <!-- Changed to function call with task.done -->\n            </span>\n            <!-- Button trigger modal -->\n\n            <!-- Modal -->\n            <span class=\"material-symbols-outlined fs-2 icon\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"  style=\"color: #FF0000;\">delete</span>\n\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Delete Task</h1>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    Are you sure??\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button  class=\"btn btn-primary\" @click=\"deleteTask(index)\" data-bs-dismiss=\"modal\" >Yes</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n           \n            <span class=\"material-symbols-outlined fs-2 icon\" @click=\"toupdate(index)\" style=\"color: #F8E931;\">update</span>\n\n          </div>\n        </div>\n      </li>\n    </ul>\n\n    \n    <div v-show=\"update\" class=\"input-group mb-3\">\n      <input type=\"text\" class=\"form-control\" name=\"updated\"  value=\"\" v-model=\"newtitle\">\n      <span class=\"input-group-text material-symbols-outlined fs-4 icon\" >check</span>\n      <span class=\"input-group-text material-symbols-outlined fs-4 icon\" >close</span>\n    </div>\n\n\n\n\n\n  </div>\n</template>\n1721317936733\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task:'',\n      index:null,\n      update:false,\n      tasktoupdate:{},\n      newtitle:tasktoupdate.title,\n      done:false,\n      tasks: [\n        {title: \"Do homework every day this week\", created_at: \"2024/04/29\", done: false, done_at: \"\"},\n      ]\n\n    }\n  },\n\n  methods: {\n    \n\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n    },\n\n    addtask(){\n      let curentdate=new Date\n      let created_at=curentdate.getFullYear()+\"/\"+ (curentdate.getMonth()+1)+\"/\"+curentdate.getDay()\n      this.tasks.push({title:this.task,created_at:created_at,done:this.done,done_at :\"\"})\n    },\n\n    deleteTask(index){\n      this.tasks.splice(index,1)\n    },\n\n    toupdate(index){\n      this.update=true\n      this.tasktoupdate=this.tasks[index]\n    }\n  },\n\n  computed: {\n    iconeStatus() {\n      return (done) => {\n        return done ? \"done_all\" : \"watch_check\";\n      }\n    },\n    \n    title() {\n      return (done) => {\n        return done ? \"mark as not done\" : \"mark as done\";\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  ul li {\n    list-style: none;\n    margin-bottom: 4%;\n  }\n\n  .tasks {\n    background-color: #2B1887;\n    border-radius: 10px;\n  }\n\n  .todo {\n    background-color: #F4F2FF;\n    max-width: 500px;\n    text-align: start;\n    border-radius: 10px;\n  }\n\n  .icon {\n    cursor: pointer;\n  }\n\n  .done {\n    color: green;\n  }\n\n  .notdone {\n    color: red;\n  }\n</style>\n"],"mappings":";AA4EA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAC,EAAE;MACPC,KAAK,EAAC,IAAI;MACVC,MAAM,EAAC,KAAK;MACZC,YAAY,EAAC,CAAC,CAAC;MACfC,QAAQ,EAACD,YAAY,CAACE,KAAK;MAC3BC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAE,CACL;QAACF,KAAK,EAAE,iCAAiC;QAAEG,UAAU,EAAE,YAAY;QAAEF,IAAI,EAAE,KAAK;QAAEG,OAAO,EAAE;MAAE,CAAC;IAGlG;EACF,CAAC;EAEDC,OAAO,EAAE;IAGPC,MAAMA,CAACV,KAAK,EAAE;MACZ,IAAI,CAACM,KAAK,CAACN,KAAK,CAAC,CAACK,IAAG,GAAI,CAAC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,CAACK,IAAI;IAClD,CAAC;IAEDM,OAAOA,CAAA,EAAE;MACP,IAAIC,UAAU,GAAC,IAAIC,IAAG;MACtB,IAAIN,UAAU,GAACK,UAAU,CAACE,WAAW,CAAC,CAAC,GAAC,GAAG,IAAGF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,GAAG,GAACH,UAAU,CAACI,MAAM,CAAC;MAC7F,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC;QAACb,KAAK,EAAC,IAAI,CAACL,IAAI;QAACQ,UAAU,EAACA,UAAU;QAACF,IAAI,EAAC,IAAI,CAACA,IAAI;QAACG,OAAM,EAAG;MAAE,CAAC;IACpF,CAAC;IAEDU,UAAUA,CAAClB,KAAK,EAAC;MACf,IAAI,CAACM,KAAK,CAACa,MAAM,CAACnB,KAAK,EAAC,CAAC;IAC3B,CAAC;IAEDoB,QAAQA,CAACpB,KAAK,EAAC;MACb,IAAI,CAACC,MAAM,GAAC,IAAG;MACf,IAAI,CAACC,YAAY,GAAC,IAAI,CAACI,KAAK,CAACN,KAAK;IACpC;EACF,CAAC;EAEDqB,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAQjB,IAAI,IAAK;QACf,OAAOA,IAAG,GAAI,UAAS,GAAI,aAAa;MAC1C;IACF,CAAC;IAEDD,KAAKA,CAAA,EAAG;MACN,OAAQC,IAAI,IAAK;QACf,OAAOA,IAAG,GAAI,kBAAiB,GAAI,cAAc;MACnD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}