{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task: '',\n      index: null,\n      update: false,\n      tasktoupdate: {},\n      done: false,\n      tasks: JSON.parse(localStorage.getItem('tasks'))\n    };\n  },\n  methods: {\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    // getTasksFromLocalStorage() {\n    //   try {\n    //     const tasks = JSON.parse(localStorage.getItem('tasks'));\n    //     return Array.isArray(tasks) ? tasks : [];\n    //   } catch (error) {\n    //     console.error(\"Error parsing tasks from localStorage:\", error);\n    //     return [];\n    //   }\n    // },\n\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    addtask() {\n      let currentdate = new Date();\n      let created_at = currentdate.getFullYear() + \" / \" + (currentdate.getMonth() + 1) + \" / \" + currentdate.getDate();\n      this.tasks.push({\n        title: this.task,\n        created_at: created_at,\n        done: this.done,\n        done_at: \"\"\n      });\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      this.task = '';\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    toupdate(index) {\n      this.update = true;\n      this.tasktoupdate = this.tasks[index];\n    }\n  },\n  computed: {\n    iconeStatus() {\n      return done => {\n        return done ? \"done_all\" : \"watch_check\";\n      };\n    },\n    title() {\n      return done => {\n        return done ? \"mark as not done\" : \"mark as done\";\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","task","index","update","tasktoupdate","done","tasks","JSON","parse","localStorage","getItem","methods","Status","setItem","stringify","addtask","currentdate","Date","created_at","getFullYear","getMonth","getDate","push","title","done_at","deleteTask","splice","toupdate","computed","iconeStatus"],"sources":["/var/www/html/Vue js/todo-list/src/components/todolist.vue"],"sourcesContent":["<template>\n  <div align=\"center\" class=\"tasks w-50 p-4\">\n\n    <form @submit.prevent=\"addtask\" style=\"text-align: start;\">\n      \n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text material-symbols-outlined fs-4\" >add</span>\n        <input type=\"text\" class=\"form-control\" name=\"task\" placeholder=\"New Task Title or description\" v-model=\"task\" required>\n        <button class=\"btn btn-primary\" type=\"submit \" >Submit</button>\n      </div>\n\n      <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" v-model=\"done\" id=\"done\">\n      <label class=\"form-check-label\" for=\"done\" style=\"color: white\">Mark as done</label>\n    </div>\n      \n    </form>\n\n    <ul>\n  <li v-for=\"(task, index) in tasks\" :key=\"index\">\n    <div class=\"todo px-3 py-3 d-flex justify-content-between\">\n      <div>\n        <p class=\"fs-5 mb-2\"><strong>{{ task.title }} </strong></p>\n        <small style=\"color: #2B1887; font-weight: 600\" class=\"m-0\">{{ task.created_at }}</small>\n      </div>\n      <div>\n        <span @click=\"Status(index)\" :title=\"title(task.done)\" class=\"material-symbols-outlined icon fs-2\" :class=\"{'done': task.done, 'notdone': !task.done}\">\n          {{ iconeStatus(task.done) }}\n        </span>\n\n        <!-- Trigger Modal -->\n        <span class=\"material-symbols-outlined fs-2 icon\" :data-bs-target=\"'#modal-' + index\" data-bs-toggle=\"modal\" style=\"color: #FF0000;\">delete</span>\n\n        <span class=\"material-symbols-outlined fs-2 icon\" @click=\"toupdate(index)\" style=\"color: #F8E931;\">update</span>\n      </div>\n    </div>\n\n    <!-- Modal -->\n    <div class=\"modal fade\" :id=\"'modal-' + index\" tabindex=\"-1\" :aria-labelledby=\"'exampleModalLabel-' + index\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h1 class=\"modal-title fs-5\" :id=\"'exampleModalLabel-' + index\">Delete Task</h1>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n          </div>\n          <div class=\"modal-body\">\n            Are you sure??\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"deleteTask(index)\" data-bs-dismiss=\"modal\">Yes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </li>\n</ul>\n\n\n    \n    <div v-show=\"update\" class=\"input-group mb-3\">\n      <input type=\"text\" class=\"form-control\" name=\"updated\"  v-model=\"tasktoupdate.title\">\n      <span class=\"input-group-text material-symbols-outlined fs-4 icon\" @click=\"update=false\" >close</span>\n    </div>\n\n\n\n\n\n  </div>\n</template>\n1721317936733\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task:'',\n      index:null,\n      update:false,\n      tasktoupdate:{},\n      done:false,\n      tasks: JSON.parse(localStorage.getItem('tasks'))\n\n    }\n  },\n\n  methods: {\n    \n\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n\n    // getTasksFromLocalStorage() {\n    //   try {\n    //     const tasks = JSON.parse(localStorage.getItem('tasks'));\n    //     return Array.isArray(tasks) ? tasks : [];\n    //   } catch (error) {\n    //     console.error(\"Error parsing tasks from localStorage:\", error);\n    //     return [];\n    //   }\n    // },\n\n    Status(index) {\n      this.tasks[index].done = !this.tasks[index].done;\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n\n    addtask() {\n      let currentdate = new Date();\n      let created_at = currentdate.getFullYear() + \" / \" + (currentdate.getMonth() + 1) + \" / \" + currentdate.getDate();\n      this.tasks.push({ title: this.task, created_at: created_at, done: this.done, done_at: \"\" });\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      this.task = '';\n    },\n\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n\n    toupdate(index){\n      this.update=true\n      this.tasktoupdate=this.tasks[index]\n    }\n  },\n\n  computed: {\n    iconeStatus() {\n      return (done) => {\n        return done ? \"done_all\" : \"watch_check\";\n      }\n    },\n    \n    title() {\n      return (done) => {\n        return done ? \"mark as not done\" : \"mark as done\";\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  ul li {\n    list-style: none;\n    margin-bottom: 4%;\n  }\n\n  .tasks {\n    background-color: #2B1887;\n    border-radius: 10px;\n  }\n\n  .todo {\n    background-color: #F4F2FF;\n    max-width: 500px;\n    text-align: start;\n    border-radius: 10px;\n  }\n\n  .icon {\n    cursor: pointer;\n  }\n\n  .done {\n    color: green;\n  }\n\n  .notdone {\n    color: red;\n  }\n</style>\n"],"mappings":";AAyEA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAC,EAAE;MACPC,KAAK,EAAC,IAAI;MACVC,MAAM,EAAC,KAAK;MACZC,YAAY,EAAC,CAAC,CAAC;MACfC,IAAI,EAAC,KAAK;MACVC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEjD;EACF,CAAC;EAEDC,OAAO,EAAE;IAGPC,MAAMA,CAACV,KAAK,EAAE;MACZ,IAAI,CAACI,KAAK,CAACJ,KAAK,CAAC,CAACG,IAAG,GAAI,CAAC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAACG,IAAI;MAChDI,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACR,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAM,MAAMA,CAACV,KAAK,EAAE;MACZ,IAAI,CAACI,KAAK,CAACJ,KAAK,CAAC,CAACG,IAAG,GAAI,CAAC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAACG,IAAI;MAChDI,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACR,KAAK,CAAC,CAAC;IAC3D,CAAC;IAEDS,OAAOA,CAAA,EAAG;MACR,IAAIC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC5B,IAAIC,UAAS,GAAIF,WAAW,CAACG,WAAW,CAAC,IAAI,KAAI,IAAKH,WAAW,CAACI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAI,GAAIJ,WAAW,CAACK,OAAO,CAAC,CAAC;MACjH,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAC;QAAEC,KAAK,EAAE,IAAI,CAACtB,IAAI;QAAEiB,UAAU,EAAEA,UAAU;QAAEb,IAAI,EAAE,IAAI,CAACA,IAAI;QAAEmB,OAAO,EAAE;MAAG,CAAC,CAAC;MAC3Ff,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACR,KAAK,CAAC,CAAC;MACzD,IAAI,CAACL,IAAG,GAAI,EAAE;IAChB,CAAC;IAEDwB,UAAUA,CAACvB,KAAK,EAAE;MAChB,IAAI,CAACI,KAAK,CAACoB,MAAM,CAACxB,KAAK,EAAE,CAAC,CAAC;MAC3BO,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACR,KAAK,CAAC,CAAC;IAC3D,CAAC;IAEDqB,QAAQA,CAACzB,KAAK,EAAC;MACb,IAAI,CAACC,MAAM,GAAC,IAAG;MACf,IAAI,CAACC,YAAY,GAAC,IAAI,CAACE,KAAK,CAACJ,KAAK;IACpC;EACF,CAAC;EAED0B,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAQxB,IAAI,IAAK;QACf,OAAOA,IAAG,GAAI,UAAS,GAAI,aAAa;MAC1C;IACF,CAAC;IAEDkB,KAAKA,CAAA,EAAG;MACN,OAAQlB,IAAI,IAAK;QACf,OAAOA,IAAG,GAAI,kBAAiB,GAAI,cAAc;MACnD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}